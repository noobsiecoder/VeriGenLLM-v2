$date
	Sun Aug 24 18:07:33 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_top_module $end
$var wire 8 ! out_lo [7:0] $end
$var wire 8 " out_hi [7:0] $end
$var reg 8 # expected_hi [7:0] $end
$var reg 8 $ expected_lo [7:0] $end
$var reg 16 % in [15:0] $end
$var integer 32 & i [31:0] $end
$var integer 32 ' num_tests_passed [31:0] $end
$var integer 32 ( total_tests [31:0] $end
$scope module dut $end
$var wire 16 ) in [15:0] $end
$var wire 8 * out_lo [7:0] $end
$var wire 8 + out_hi [7:0] $end
$upscope $end
$scope task check_outputs $end
$var reg 8 , exp_hi [7:0] $end
$var reg 8 - exp_lo [7:0] $end
$var reg 160 . test_name [160:1] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx .
bx -
bx ,
b0 +
b0 *
b0 )
b0 (
b0 '
bx &
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#10000
b11111111 "
b11111111 +
b11111111 !
b11111111 *
b11111111 $
b11111111 #
b1111111111111111 %
b1111111111111111 )
b1 '
b1 (
b0 -
b0 ,
b10000010110110001101100001000000111101001100101011100100110111101110011 .
#20000
b0 !
b0 *
b0 $
b1111111100000000 %
b1111111100000000 )
b10 '
b10 (
b11111111 -
b11111111 ,
b100000101101100011011000010000001101111011011100110010101110011 .
#30000
b0 "
b0 +
b11111111 !
b11111111 *
b11111111 $
b0 #
b11111111 %
b11111111 )
b11 '
b11 (
b0 -
b10101010111000001110000011001010111001000100000011000100111100101110100011001010010000001101111011011100110110001111001 .
#40000
b10101010 "
b10101010 +
b10101010 !
b10101010 *
b10101010 $
b10101010 #
b1010101010101010 %
b1010101010101010 )
b100 '
b100 (
b11111111 -
b0 ,
b10011000110111101110111011001010111001000100000011000100111100101110100011001010010000001101111011011100110110001111001 .
#50000
b1010101 "
b1010101 +
b1010101 !
b1010101 *
b1010101 $
b1010101 #
b101010101010101 %
b101010101010101 )
b101 '
b101 (
b10101010 -
b10101010 ,
b1000001011011000111010001100101011100100110111001100001011101000110100101101110011001110010000000110001001100000011000100110000 .
#60000
b11011110 "
b11011110 +
b10101101 !
b10101101 *
b10101101 $
b11011110 #
b1101111010101101 %
b1101111010101101 )
b110 '
b110 (
b1010101 -
b1010101 ,
b1000001011011000111010001100101011100100110111001100001011101000110100101101110011001110010000000110000001100010011000000110001 .
#70000
b10111110 "
b10111110 +
b11101111 !
b11101111 *
b11101111 $
b10111110 #
b1011111011101111 %
b1011111011101111 )
b111 '
b111 (
b10101101 -
b11011110 ,
b11000001111000010001000100010101000001010001000010000001110000011000010111010001110100011001010111001001101110 .
#80000
b1 "
b1 +
b100011 !
b100011 *
b100011 $
b1 #
b100100011 %
b100100011 )
b1000 '
b1000 (
b11101111 -
b10111110 ,
b11000001111000010000100100010101000101010001100010000001110000011000010111010001110100011001010111001001101110 .
#90000
b0 "
b0 +
b1 !
b1 *
b1 $
b0 #
b1 %
b1 )
b0 &
b1001 '
b1001 (
b100011 -
b1 ,
b11000001111000001100000011000100110010001100110010000001110000011000010111010001110100011001010111001001101110 .
#100000
b10 !
b10 *
b10 $
b10 %
b10 )
b1 &
b1010 (
b1010 '
#110000
b100 !
b100 *
b100 $
b100 %
b100 )
b10 &
b1011 (
b1011 '
#120000
b1000 !
b1000 *
b1000 $
b1000 %
b1000 )
b11 &
b1100 (
b1100 '
#130000
b10000 !
b10000 *
b10000 $
b10000 %
b10000 )
b100 &
b1101 (
b1101 '
#140000
b100000 !
b100000 *
b100000 $
b100000 %
b100000 )
b101 &
b1110 (
b1110 '
#150000
b1000000 !
b1000000 *
b1000000 $
b1000000 %
b1000000 )
b110 &
b1111 (
b1111 '
#160000
b10000000 !
b10000000 *
b10000000 $
b10000000 %
b10000000 )
b111 &
b10000 (
b10000 '
#170000
b1 "
b1 +
b0 !
b0 *
b0 $
b1 #
b100000000 %
b100000000 )
b1000 &
b10001 (
b10001 '
#180000
b10 "
b10 +
b10 #
b1000000000 %
b1000000000 )
b1001 &
b10010 (
b10010 '
#190000
b100 "
b100 +
b100 #
b10000000000 %
b10000000000 )
b1010 &
b10011 (
b10011 '
#200000
b1000 "
b1000 +
b1000 #
b100000000000 %
b100000000000 )
b1011 &
b10100 (
b10100 '
#210000
b10000 "
b10000 +
b10000 #
b1000000000000 %
b1000000000000 )
b1100 &
b10101 (
b10101 '
#220000
b100000 "
b100000 +
b100000 #
b10000000000000 %
b10000000000000 )
b1101 &
b10110 (
b10110 '
#230000
b1000000 "
b1000000 +
b1000000 #
b100000000000000 %
b100000000000000 )
b1110 &
b10111 (
b10111 '
#240000
b10000000 "
b10000000 +
b10000000 #
b1000000000000000 %
b1000000000000000 )
b1111 &
b11000 (
b11000 '
#250000
b10010 "
b10010 +
b110100 !
b110100 *
b110100 $
b10010 #
b1001000110100 %
b1001000110100 )
b10000 &
b11001 (
b11001 '
#260000
b1010110 "
b1010110 +
b1111000 !
b1111000 *
b1111000 $
b1010110 #
b101011001111000 %
b101011001111000 )
b11010 '
b11010 (
b110100 -
b10010 ,
b1100000111100000110001001100100011001100110100 .
#270000
b10011010 "
b10011010 +
b10111100 !
b10111100 *
b10111100 $
b10011010 #
b1001101010111100 %
b1001101010111100 )
b11011 '
b11011 (
b1111000 -
b1010110 ,
b1100000111100000110101001101100011011100111000 .
#280000
b11110000 "
b11110000 +
b11100001 !
b11100001 *
b11100001 $
b11110000 #
b1111000011100001 %
b1111000011100001 )
b11100 '
b11100 (
b10111100 -
b10011010 ,
b1100000111100000111001010000010100001001000011 .
#290000
b0 "
b0 +
b0 !
b0 *
b0 %
b0 )
b11101 '
b11101 (
b11100001 -
b11110000 ,
b1100000111100001000110001100000100010100110001 .
#300000
b11111111 "
b11111111 +
b11111111 !
b11111111 *
b1111111111111111 %
b1111111111111111 )
#310000
b10000000 "
b10000000 +
b0 !
b0 *
b1000000000000000 %
b1000000000000000 )
#320000
