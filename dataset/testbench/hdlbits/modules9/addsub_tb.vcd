$date
	Mon Aug 25 14:09:07 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_top_module_addsub $end
$var wire 32 ! sum [31:0] $end
$var reg 32 " a [31:0] $end
$var reg 32 # b [31:0] $end
$var reg 32 $ expected_result [31:0] $end
$var reg 32 % signed_a [31:0] $end
$var reg 32 & signed_b [31:0] $end
$var reg 32 ' signed_result [31:0] $end
$var reg 1 ( sub $end
$var integer 32 ) i [31:0] $end
$var integer 32 * num_tests_passed [31:0] $end
$var integer 32 + total_tests [31:0] $end
$scope module dut $end
$var wire 32 , a [31:0] $end
$var wire 32 - b [31:0] $end
$var wire 1 ( sub $end
$var wire 32 . xor_sig [31:0] $end
$var wire 32 / sum [31:0] $end
$var wire 1 0 cout2 $end
$var wire 1 1 cout1 $end
$scope module adder1 $end
$var wire 16 2 a [15:0] $end
$var wire 16 3 b [15:0] $end
$var wire 1 ( cin $end
$var wire 16 4 sum [15:0] $end
$var wire 1 1 cout $end
$upscope $end
$scope module adder2 $end
$var wire 16 5 a [15:0] $end
$var wire 16 6 b [15:0] $end
$var wire 1 1 cin $end
$var wire 16 7 sum [15:0] $end
$var wire 1 0 cout $end
$upscope $end
$upscope $end
$scope task check_result $end
$var reg 160 8 description [160:1] $end
$var reg 32 9 expected [31:0] $end
$upscope $end
$scope task test_operation $end
$var reg 160 : description [160:1] $end
$var reg 32 ; test_a [31:0] $end
$var reg 32 < test_b [31:0] $end
$upscope $end
$scope task test_signed_operation $end
$var reg 160 = description [160:1] $end
$var reg 32 > test_a [31:0] $end
$var reg 32 ? test_b [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx ?
bx >
bx =
b0 <
b0 ;
b11000000100000001010110010000000110000 :
bx 9
bx 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
01
00
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
bx )
0(
bx '
bx &
bx %
b0 $
b0 #
b0 "
b0 !
$end
#10000
b1 3
b10 !
b10 /
b10 4
b1 .
b1 2
b10 $
b1 #
b1 -
b1 "
b1 ,
b11000100100000001010110010000000110001 :
b1 <
b1 ;
b1 *
b1 +
#20000
b100000000 !
b100000000 /
b100000000 4
b11111111 2
b100000000 $
b11111111 "
b11111111 ,
b110010001101010011010100100000001010110010000000110001 :
b11111111 ;
b10 *
b10 +
#30000
b100001100100001 3
b1000011101100101 6
b1001100110011001 4
b10011001100110011001100110011001 !
b10011001100110011001100110011001 /
b1001100110011001 7
b10000111011001010100001100100001 .
b101011001111000 2
b1001000110100 5
b10011001100110011001100110011001 $
b10000111011001010100001100100001 #
b10000111011001010100001100100001 -
b10010001101000101011001111000 "
b10010001101000101011001111000 ,
b100110101101001011110000110010101100100001000000110000101100100011001000110100101110100011010010110111101101110 :
b10000111011001010100001100100001 <
b10010001101000101011001111000 ;
b11 *
b11 +
#40000
b1 3
b0 6
b0 4
11
b0 !
b0 /
b0 7
10
b1 .
b1111111111111111 2
b1111111111111111 5
b0 $
b1 #
b1 -
b11111111111111111111111111111111 "
b11111111111111111111111111111111 ,
b1001101011000010111100000100000001010110010000000110001 :
b1 <
b11111111111111111111111111111111 ;
b100 *
b100 +
#50000
b10000000000000000 !
b10000000000000000 /
b1 7
00
b0 5
b10000000000000000 $
b1111111111111111 "
b1111111111111111 ,
b1000011011000010111001001110010011110010010000001110100011001010111001101110100 :
b1111111111111111 ;
b101 *
b101 +
#60000
b0 7
10
b1111111111111100 3
b1111111111111111 6
b101 2
b11111111111111111111111111111100 .
b10 !
b10 /
b10 4
b10 $
b11 #
b11 -
b101 "
b101 ,
b11010100100000001011010010000000110011 :
b11 <
b101 ;
1(
b110 *
b110 +
#70000
b1111111111111111 7
00
01
b1111111111111010 3
b11111111111111111111111111111110 !
b11111111111111111111111111111110 /
b1111111111111110 4
b11111111111111111111111111111010 .
b11 2
b11111111111111111111111111111110 $
b101 #
b101 -
b11 "
b11 ,
b11001100100000001011010010000000110101 :
b101 <
b11 ;
b111 *
b111 +
#80000
b0 7
10
b1111111111111110 3
b11111111 !
b11111111 /
b11111111 4
11
b11111111111111111111111111111110 .
b100000000 2
b11111111 $
b1 #
b1 -
b100000000 "
b100000000 ,
b110010001101010011011000100000001011010010000000110001 :
b1 <
b100000000 ;
b1000 *
b1000 +
#90000
b1111111111111111 7
00
b11111111111111111111111111111111 !
b11111111111111111111111111111111 /
b1111111111111111 4
01
b0 2
b11111111111111111111111111111111 $
b0 "
b0 ,
b11000000100000001011010010000000110001 :
b0 ;
b1001 *
b1001 +
#100000
b0 3
b0 6
b0 4
11
b0 !
b0 /
b0 7
10
b0 .
b1111111111111111 2
b1111111111111111 5
b0 $
b11111111111111111111111111111111 #
b11111111111111111111111111111111 -
b11111111111111111111111111111111 "
b11111111111111111111111111111111 ,
b1011010011000100100000001011010010000000101000001011010011000100101001 :
b11111111111111111111111111111111 <
b11111111111111111111111111111111 ;
b1010 *
b1010 +
#110000
b1010100110000111 3
b1110110111001011 6
b0 4
11
b0 !
b0 /
b0 7
10
b11101101110010111010100110000111 .
b101011001111000 2
b1001000110100 5
b10010001101000101011001111000 #
b10010001101000101011001111000 -
b10010001101000101011001111000 "
b10010001101000101011001111000 ,
b110000100100000001011010010000001100001 :
b10010001101000101011001111000 <
b10010001101000101011001111000 ;
b1011 *
b1011 +
#120000
b110110010001110 7
00
b101101001011010 3
b101101001011010 6
b1101100100011101011000011010010 !
b1101100100011101011000011010010 /
b1011000011010010 4
01
b1011010010110100101101001011010 .
0(
b1011010010110100101101001011010 #
b1011010010110100101101001011010 -
b1100 *
b1100 +
#130000
b1011011111011001 7
b1010010110100101 3
b1010010110100101 6
b10100101101001011010010110100101 .
b10110111110110011111110000011110 !
b10110111110110011111110000011110 /
b1111110000011110 4
1(
#140000
10
b1111111111111110 3
b1111111111111111 6
b1111111111111111 4
b1111111111111111 !
b1111111111111111 /
b0 7
b11111111111111111111111111111110 .
b0 2
b1 5
b1 #
b1 -
b10000000000000000 "
b10000000000000000 ,
b1101 +
b1101 *
#150000
00
b110010 3
b0 6
b1100100 2
b0 5
b110010 .
b10010110 !
b10010110 /
b10010110 4
b10010110 '
b110010 &
b1100100 %
b110010 #
b110010 -
b1100100 "
b1100100 ,
b11000100110000001100000010000000101011001000000011010100110000 =
b110010 ?
b1100100 >
0(
b1110 *
b1110 +
b10000100110111101110010011100100110111101110111001000000111000001110010011011110111000001100001011001110110000101110100011010010110111101101110 8
b1111111111111111 9
b10010110 $
#160000
10
11
b0 7
b1111111111001101 3
b1111111111111111 6
b11111111111111111111111111001101 .
b110010 !
b110010 /
b110010 4
b110010 '
b110010 $
b11000100110000001100000010000000101101001000000011010100110000 =
1(
b1111 *
b1111 +
#170000
b10010110 4
01
b10010110 !
b10010110 /
b0 7
00
b110001 3
b0 6
b110001 .
b10010110 '
b10010110 $
b11111111111111111111111111001110 &
b11111111111111111111111111001110 #
b11111111111111111111111111001110 -
b11000100110000001100000010000000101101001000000010100000101101001101010011000000101001 =
b11111111111111111111111111001110 ?
b10000 *
b10000 +
#180000
11
10
b1111111111001101 3
b1111111111111111 6
b1111111101101010 4
b11111111111111111111111101101010 !
b11111111111111111111111101101010 /
b1111111111111111 7
b11111111111111111111111111001101 .
b1111111110011100 2
b1111111111111111 5
b11111111111111111111111101101010 '
b11111111111111111111111101101010 $
b110010 &
b11111111111111111111111110011100 %
b110010 #
b110010 -
b11111111111111111111111110011100 "
b11111111111111111111111110011100 ,
b1011010011000100110000001100000010000000101101001000000011010100110000 =
b110010 ?
b11111111111111111111111110011100 >
b10001 *
b10001 +
#190000
b1111111111111110 3
b1111111111111110 4
b1111111111111111111111111111110 !
b1111111111111111111111111111110 /
b111111111111111 7
b11111111111111111111111111111110 .
b1111111111111111 2
b111111111111111 5
b1111111111111111111111111111110 $
b1 #
b1 -
b1111111111111111111111111111111 "
b1111111111111111111111111111111 ,
b1001101011000010111100001010000011011110111001100100000001011010010000000110001 :
b1 <
b1111111111111111111111111111111 ;
b10010 *
b10010 +
#200000
00
b0 3
b0 6
b1 4
01
b10000000000000000000000000000001 !
b10000000000000000000000000000001 /
b1000000000000000 7
b0 .
b0 2
b1000000000000000 5
b10000000000000000000000000000001 $
b11111111111111111111111111111111 #
b11111111111111111111111111111111 -
b10000000000000000000000000000000 "
b10000000000000000000000000000000 ,
b1001101011010010110111001001110011001010110011100100000001011010010000000101000001011010011000100101001 :
b11111111111111111111111111111111 <
b10000000000000000000000000000000 ;
b10011 *
b10011 +
#210000
11
b1000000000000000 7
b1 3
b1111111111111111 2
b111111111111111 5
b1 .
b10000000000000000000000000000000 !
b10000000000000000000000000000000 /
b0 4
b10000000000000000000000000000000 $
b1 #
b1 -
b1111111111111111111111111111111 "
b1111111111111111111111111111111 ,
b110000101111000010100000110111101110011001000000010101100100000001100010010000000101000011011110111011001100101011100100110011001101100011011110111011100101001 :
b1 <
b1111111111111111111111111111111 ;
0(
b10100 *
b10100 +
#220000
b1010000101111110 3
b11111101110110 6
01
b101000110001011 7
b1010001100010111101011010100011 !
b1010001100010111101011010100011 /
b1101011010100011 4
b111111011101101010000101111110 .
b11010100100100 2
b1001000010101 5
b1010001100010111101011010100011 $
b1010010011000010110111001100100011011110110110100100000011100110111010101100010 :
b11000000100010010101111010000001 <
b10010000101010011010100100100 ;
1(
b11000000100010010101111010000001 #
b11000000100010010101111010000001 -
b10010000101010011010100100100 "
b10010000101010011010100100100 ,
b0 )
b10101 *
b10101 +
#230000
10
b1000010011110010 3
b1111100101000110 6
b1101101101010110 4
b10101011001101101101101101010110 !
b10101011001101101101101101010110 /
b1010101100110110 7
b11111001010001101000010011110010 .
b101011001100011 2
b1011000111110000 5
b10101011001101101101101101010110 $
b110101110010111101100001101 <
b10110001111100000101011001100011 ;
b110101110010111101100001101 #
b110101110010111101100001101 -
b10110001111100000101011001100011 "
b10110001111100000101011001100011 ,
b1 )
b10110 *
b10110 +
#240000
b1010110111101101 3
b111011011001000 6
b11001001010011 4
11
b101001100010110011001001010011 !
b101001100010110011001001010011 /
b10100110001011 7
b1110110110010001010110111101101 .
b1000010001100101 2
b1011001011000010 5
b101001100010110011001001010011 $
b10001001001101110101001000010010 <
b10110010110000101000010001100101 ;
b10001001001101110101001000010010 #
b10001001001101110101001000010010 -
b10110010110000101000010001100101 "
b10110010110000101000010001100101 ,
b10 )
b10111 *
b10111 +
#250000
01
b111010001001 3
b1100010011011100 6
b1101101110010111 4
b11001011101100111101101110010111 !
b11001011101100111101101110010111 /
b1100101110110011 7
00
b11000100110111000000111010001001 .
b1100110100001101 2
b11011010111 5
b11001011101100111101101110010111 $
b111011001000111111000101110110 <
b110110101111100110100001101 ;
b111011001000111111000101110110 #
b111011001000111111000101110110 -
b110110101111100110100001101 "
b110110101111100110100001101 ,
b11 )
b11000 *
b11000 +
#260000
b100001110011 3
b1011100111010010 6
b110000001100001 4
b110000101001100110000001100001 !
b110000101001100110000001100001 /
b11000010100110 7
10
b10111001110100100000100001110011 .
b101011111101101 2
b111011011010100 5
b110000101001100110000001100001 $
b1000110001011011111011110001100 <
b1110110110101000101011111101101 ;
b1000110001011011111011110001100 #
b1000110001011011111011110001100 -
b1110110110101000101011111101101 "
b1110110110101000101011111101101 ,
b100 )
b11001 *
b11001 +
#270000
b1000010011000101 3
b1110001011110111 6
b1100011000101110 7
b11000110001011101010100110001011 !
b11000110001011101010100110001011 /
b1010100110001011 4
b11100010111101111000010011000101 .
b10010011000110 2
b1110001100110111 5
b11000110001011101010100110001011 $
b1010010011000010110111001100100011011110110110100100000011000010110010001100100 :
b11100010111101111000010011000101 <
b11100011001101110010010011000110 ;
0(
b11100010111101111000010011000101 #
b11100010111101111000010011000101 -
b11100011001101110010010011000110 "
b11100011001101110010010011000110 ,
b101 )
b11010 *
b11010 +
#280000
b111001001110111 3
b1011101111010010 6
b110101001011100 4
11
b101110100000100110101001011100 !
b101110100000100110101001011100 /
b10111010000010 7
b10111011110100100111001001110111 .
b1111011111100101 2
b111001010101111 5
b101110100000100110101001011100 $
b10111011110100100111001001110111 <
b1110010101011111111011111100101 ;
b10111011110100100111001001110111 #
b10111011110100100111001001110111 -
b1110010101011111111011111100101 "
b1110010101011111111011111100101 ,
b110 )
b11011 *
b11011 +
#290000
00
b110100111110010 3
b111100100110000 6
b100010110000001 4
b11000001000111010100010110000001 !
b11000001000111010100010110000001 /
b1100000100011101 7
b1111001001100000110100111110010 .
b1101101110001111 2
b100011111101100 5
b11000001000111010100010110000001 $
b1111001001100000110100111110010 <
b1000111111011001101101110001111 ;
b1111001001100000110100111110010 #
b1111001001100000110100111110010 -
b1000111111011001101101110001111 "
b1000111111011001101101110001111 ,
b111 )
b11100 *
b11100 +
#300000
b100111011000101 3
b1110001011001010 6
b1100100110101101 4
01
b11010110110010101100100110101101 !
b11010110110010101100100110101101 /
b1101011011001010 7
10
b11100010110010100100111011000101 .
b111101011101000 2
b1111010000000000 5
b11010110110010101100100110101101 $
b11100010110010100100111011000101 <
b11110100000000000111101011101000 ;
b11100010110010100100111011000101 #
b11100010110010100100111011000101 -
b11110100000000000111101011101000 "
b11110100000000000111101011101000 ,
b1000 )
b11101 *
b11101 +
#310000
b1010011111010010 3
b110100101010100 6
b100011111100010 7
b1000111111000101101000010010000 !
b1000111111000101101000010010000 /
b1101000010010000 4
b1101001010101001010011111010010 .
b10100010111101 2
b1101111010001110 5
b1000111111000101101000010010000 $
b1010010011000010110111001100100011011110110110100100000011100110111010101100010 :
b10010110101010110101100000101101 <
b11011110100011100010100010111101 ;
1(
b10010110101010110101100000101101 #
b10010110101010110101100000101101 -
b11011110100011100010100010111101 "
b11011110100011100010100010111101 ,
b1001 )
b11110 *
b11110 +
#320000
11
b1111111111111100 3
b1111111111111111 6
b111 4
b111 !
b111 /
b0 7
10
b11111111111111111111111111111100 .
b1010 2
b0 5
b11 #
b11 -
b1010 "
b1010 ,
b1010 )
b11111 *
b11111 +
#330000
