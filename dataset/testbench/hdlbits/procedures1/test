#! /opt/homebrew/Cellar/icarus-verilog/12.0/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/system.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_sys.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/vhdl_textio.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/v2005_math.vpi";
:vpi_module "/opt/homebrew/Cellar/icarus-verilog/12.0/lib/ivl/va_math.vpi";
S_0x154f06660 .scope module, "tb_top_module_always" "tb_top_module_always" 2 3;
 .timescale -9 -12;
v0x600002ae02d0_0 .var "a", 0 0;
v0x600002ae0360_0 .var "b", 0 0;
v0x600002ae03f0_0 .var "expected_out", 0 0;
v0x600002ae0480_0 .var/i "i", 31 0;
v0x600002ae0510_0 .var/i "num_tests_passed", 31 0;
v0x600002ae05a0_0 .net "out_alwaysblock", 0 0, v0x600002ae01b0_0;  1 drivers
v0x600002ae0630_0 .net "out_assign", 0 0, L_0x6000033e5180;  1 drivers
v0x600002ae06c0_0 .var/i "total_tests", 31 0;
S_0x154f067d0 .scope module, "dut" "top_module_always" 2 13, 3 1 0, S_0x154f06660;
 .timescale -9 -12;
    .port_info 0 /INPUT 1 "a";
    .port_info 1 /INPUT 1 "b";
    .port_info 2 /OUTPUT 1 "out_assign";
    .port_info 3 /OUTPUT 1 "out_alwaysblock";
L_0x6000033e5180 .functor AND 1, v0x600002ae02d0_0, v0x600002ae0360_0, C4<1>, C4<1>;
v0x600002ae0090_0 .net "a", 0 0, v0x600002ae02d0_0;  1 drivers
v0x600002ae0120_0 .net "b", 0 0, v0x600002ae0360_0;  1 drivers
v0x600002ae01b0_0 .var "out_alwaysblock", 0 0;
v0x600002ae0240_0 .net "out_assign", 0 0, L_0x6000033e5180;  alias, 1 drivers
E_0x600000de9f80 .event anyedge, v0x600002ae0090_0, v0x600002ae0120_0;
    .scope S_0x154f067d0;
T_0 ;
    %wait E_0x600000de9f80;
    %load/vec4 v0x600002ae0090_0;
    %load/vec4 v0x600002ae0120_0;
    %and;
    %store/vec4 v0x600002ae01b0_0, 0, 1;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x154f06660;
T_1 ;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600002ae0510_0, 0, 32;
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600002ae06c0_0, 0, 32;
    %vpi_call 2 32 "$display", "===============================================================" {0 0 0};
    %vpi_call 2 33 "$display", "Testing AND Gate: assign vs always block implementation" {0 0 0};
    %vpi_call 2 34 "$display", "Both outputs should always match for combinational logic" {0 0 0};
    %vpi_call 2 35 "$display", "===============================================================" {0 0 0};
    %vpi_call 2 38 "$display", "\012Test 1: AND Gate Truth Table" {0 0 0};
    %vpi_call 2 39 "$display", "-----------------------------------------------" {0 0 0};
    %vpi_call 2 40 "$display", "a | b | out_assign | out_always | Expected | Result" {0 0 0};
    %vpi_call 2 41 "$display", "-----------------------------------------------" {0 0 0};
    %pushi/vec4 0, 0, 32;
    %store/vec4 v0x600002ae0480_0, 0, 32;
T_1.0 ;
    %load/vec4 v0x600002ae0480_0;
    %cmpi/s 4, 0, 32;
    %jmp/0xz T_1.1, 5;
    %load/vec4 v0x600002ae0480_0;
    %parti/s 2, 0, 2;
    %split/vec4 1;
    %store/vec4 v0x600002ae0360_0, 0, 1;
    %store/vec4 v0x600002ae02d0_0, 0, 1;
    %load/vec4 v0x600002ae02d0_0;
    %load/vec4 v0x600002ae0360_0;
    %and;
    %store/vec4 v0x600002ae03f0_0, 0, 1;
    %delay 10000, 0;
    %load/vec4 v0x600002ae06c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600002ae06c0_0, 0, 32;
    %load/vec4 v0x600002ae0630_0;
    %load/vec4 v0x600002ae03f0_0;
    %cmp/e;
    %flag_get/vec4 4;
    %jmp/0 T_1.5, 4;
    %load/vec4 v0x600002ae05a0_0;
    %load/vec4 v0x600002ae03f0_0;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_1.5;
    %flag_set/vec4 9;
    %flag_get/vec4 9;
    %jmp/0 T_1.4, 9;
    %load/vec4 v0x600002ae0630_0;
    %load/vec4 v0x600002ae05a0_0;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_1.4;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %load/vec4 v0x600002ae0510_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600002ae0510_0, 0, 32;
    %vpi_call 2 54 "$display", "%b | %b |     %b      |     %b      |    %b     | PASS", v0x600002ae02d0_0, v0x600002ae0360_0, v0x600002ae0630_0, v0x600002ae05a0_0, v0x600002ae03f0_0 {0 0 0};
    %jmp T_1.3;
T_1.2 ;
    %vpi_call 2 57 "$display", "%b | %b |     %b      |     %b      |    %b     | FAIL", v0x600002ae02d0_0, v0x600002ae0360_0, v0x600002ae0630_0, v0x600002ae05a0_0, v0x600002ae03f0_0 {0 0 0};
T_1.3 ;
    %load/vec4 v0x600002ae0480_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600002ae0480_0, 0, 32;
    %jmp T_1.0;
T_1.1 ;
    %vpi_call 2 63 "$display", "\012Test 2: Timing Comparison" {0 0 0};
    %vpi_call 2 64 "$display", "-----------------------------------------------" {0 0 0};
    %vpi_call 2 65 "$display", "Both outputs should change simultaneously" {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600002ae02d0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600002ae0360_0, 0, 1;
    %delay 10000, 0;
    %vpi_call 2 71 "$display", "\012Changing a: 0 -> 1 (b = 0)" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x600002ae02d0_0, 0, 1;
    %delay 1000, 0;
    %vpi_call 2 74 "$display", "After 1ns: out_assign = %b, out_alwaysblock = %b", v0x600002ae0630_0, v0x600002ae05a0_0 {0 0 0};
    %load/vec4 v0x600002ae0630_0;
    %load/vec4 v0x600002ae05a0_0;
    %cmp/e;
    %jmp/0xz  T_1.6, 4;
    %vpi_call 2 77 "$display", "Outputs match: PASS" {0 0 0};
    %load/vec4 v0x600002ae0510_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600002ae0510_0, 0, 32;
    %jmp T_1.7;
T_1.6 ;
    %vpi_call 2 80 "$display", "Outputs don't match: FAIL" {0 0 0};
T_1.7 ;
    %load/vec4 v0x600002ae06c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600002ae06c0_0, 0, 32;
    %delay 9000, 0;
    %vpi_call 2 87 "$display", "\012Changing b: 0 -> 1 (a = 1)" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x600002ae0360_0, 0, 1;
    %delay 1000, 0;
    %vpi_call 2 90 "$display", "After 1ns: out_assign = %b, out_alwaysblock = %b", v0x600002ae0630_0, v0x600002ae05a0_0 {0 0 0};
    %load/vec4 v0x600002ae0630_0;
    %load/vec4 v0x600002ae05a0_0;
    %cmp/e;
    %flag_get/vec4 4;
    %jmp/0 T_1.10, 4;
    %load/vec4 v0x600002ae0630_0;
    %pushi/vec4 1, 0, 1;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_1.10;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.8, 8;
    %vpi_call 2 93 "$display", "Both outputs = 1: PASS" {0 0 0};
    %load/vec4 v0x600002ae0510_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600002ae0510_0, 0, 32;
    %jmp T_1.9;
T_1.8 ;
    %vpi_call 2 96 "$display", "Incorrect output: FAIL" {0 0 0};
T_1.9 ;
    %load/vec4 v0x600002ae06c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600002ae06c0_0, 0, 32;
    %vpi_call 2 101 "$display", "\012Test 3: Rapid Input Transitions" {0 0 0};
    %vpi_call 2 102 "$display", "-----------------------------------------------" {0 0 0};
    %pushi/vec4 10, 0, 32;
T_1.11 %dup/vec4;
    %pushi/vec4 0, 0, 32;
    %cmp/s;
    %jmp/1xz T_1.12, 5;
    %jmp/1 T_1.12, 4;
    %pushi/vec4 1, 0, 32;
    %sub;
    %delay 5000, 0;
    %vpi_func 2 106 "$random" 32 {0 0 0};
    %pad/s 1;
    %store/vec4 v0x600002ae02d0_0, 0, 1;
    %vpi_func 2 107 "$random" 32 {0 0 0};
    %pad/s 1;
    %store/vec4 v0x600002ae0360_0, 0, 1;
    %delay 1000, 0;
    %load/vec4 v0x600002ae02d0_0;
    %load/vec4 v0x600002ae0360_0;
    %and;
    %store/vec4 v0x600002ae03f0_0, 0, 1;
    %load/vec4 v0x600002ae0630_0;
    %load/vec4 v0x600002ae03f0_0;
    %cmp/e;
    %flag_get/vec4 4;
    %jmp/0 T_1.15, 4;
    %load/vec4 v0x600002ae05a0_0;
    %load/vec4 v0x600002ae03f0_0;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_1.15;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.13, 8;
    %load/vec4 v0x600002ae0510_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600002ae0510_0, 0, 32;
T_1.13 ;
    %load/vec4 v0x600002ae06c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600002ae06c0_0, 0, 32;
    %load/vec4 v0x600002ae0630_0;
    %load/vec4 v0x600002ae03f0_0;
    %cmp/e;
    %flag_get/vec4 4;
    %jmp/0 T_1.18, 4;
    %load/vec4 v0x600002ae05a0_0;
    %load/vec4 v0x600002ae03f0_0;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_1.18;
    %flag_set/vec4 8;
    %jmp/0 T_1.16, 8;
    %pushi/vec4 1346458451, 0, 32; draw_string_vec4
    %jmp/1 T_1.17, 8;
T_1.16 ; End of true expr.
    %pushi/vec4 1178683724, 0, 32; draw_string_vec4
    %jmp/0 T_1.17, 8;
 ; End of false expr.
    %blend;
T_1.17;
    %vpi_call 2 117 "$display", "a=%b, b=%b: assign=%b, always=%b, expected=%b %s", v0x600002ae02d0_0, v0x600002ae0360_0, v0x600002ae0630_0, v0x600002ae05a0_0, v0x600002ae03f0_0, S<0,vec4,u32> {1 0 0};
    %jmp T_1.11;
T_1.12 ;
    %pop/vec4 1;
    %vpi_call 2 123 "$display", "\012Test 4: Sensitivity List Verification" {0 0 0};
    %vpi_call 2 124 "$display", "-----------------------------------------------" {0 0 0};
    %vpi_call 2 125 "$display", "always @(*) should be sensitive to both a and b" {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600002ae02d0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x600002ae0360_0, 0, 1;
    %delay 10000, 0;
    %vpi_call 2 129 "$display", "Initial: a=%b, b=%b, out_always=%b", v0x600002ae02d0_0, v0x600002ae0360_0, v0x600002ae05a0_0 {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x600002ae02d0_0, 0, 1;
    %delay 1000, 0;
    %load/vec4 v0x600002ae02d0_0;
    %load/vec4 v0x600002ae0360_0;
    %and;
    %vpi_call 2 133 "$display", "After a change: out_always=%b (should be %b)", v0x600002ae05a0_0, S<0,vec4,u1> {1 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600002ae02d0_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600002ae0360_0, 0, 1;
    %delay 10000, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x600002ae0360_0, 0, 1;
    %delay 1000, 0;
    %load/vec4 v0x600002ae02d0_0;
    %load/vec4 v0x600002ae0360_0;
    %and;
    %vpi_call 2 140 "$display", "After b change: out_always=%b (should be %b)", v0x600002ae05a0_0, S<0,vec4,u1> {1 0 0};
    %vpi_call 2 144 "$display", "\012Test 5: Implementation Method Comparison" {0 0 0};
    %vpi_call 2 145 "$display", "-----------------------------------------------" {0 0 0};
    %vpi_call 2 146 "$display", "assign statement: Continuous assignment" {0 0 0};
    %vpi_call 2 147 "$display", "  - Always active, updates whenever inputs change" {0 0 0};
    %vpi_call 2 148 "$display", "  - Used for simple combinational logic" {0 0 0};
    %vpi_call 2 149 "$display", "  - Cannot be used for sequential logic" {0 0 0};
    %vpi_call 2 150 "$display", "\012always @(*) block: Procedural assignment" {0 0 0};
    %vpi_call 2 151 "$display", "  - Executes when any signal in RHS changes" {0 0 0};
    %vpi_call 2 152 "$display", "  - Can contain more complex procedural code" {0 0 0};
    %vpi_call 2 153 "$display", "  - Output must be declared as 'reg'" {0 0 0};
    %vpi_call 2 156 "$display", "\012Test 6: Checking for Glitches" {0 0 0};
    %vpi_call 2 157 "$display", "-----------------------------------------------" {0 0 0};
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x600002ae02d0_0, 0, 1;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x600002ae0360_0, 0, 1;
    %delay 10000, 0;
    %fork t_1, S_0x154f06660;
    %fork t_2, S_0x154f06660;
    %join;
    %join;
    %jmp t_0;
t_1 ;
    %delay 0, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600002ae02d0_0, 0, 1;
    %end;
t_2 ;
    %delay 0, 0;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x600002ae0360_0, 0, 1;
    %end;
    .scope S_0x154f06660;
t_0 ;
    %delay 1000, 0;
    %vpi_call 2 169 "$display", "Simultaneous change: a=%b, b=%b", v0x600002ae02d0_0, v0x600002ae0360_0 {0 0 0};
    %vpi_call 2 170 "$display", "Outputs: assign=%b, always=%b", v0x600002ae0630_0, v0x600002ae05a0_0 {0 0 0};
    %load/vec4 v0x600002ae0630_0;
    %pad/u 32;
    %cmpi/e 0, 0, 32;
    %flag_get/vec4 4;
    %jmp/0 T_1.21, 4;
    %load/vec4 v0x600002ae05a0_0;
    %pad/u 32;
    %pushi/vec4 0, 0, 32;
    %cmp/e;
    %flag_get/vec4 4;
    %and;
T_1.21;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.19, 8;
    %vpi_call 2 173 "$display", "No glitch detected: PASS" {0 0 0};
    %load/vec4 v0x600002ae0510_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600002ae0510_0, 0, 32;
    %jmp T_1.20;
T_1.19 ;
    %vpi_call 2 176 "$display", "Possible glitch: FAIL" {0 0 0};
T_1.20 ;
    %load/vec4 v0x600002ae06c0_0;
    %addi 1, 0, 32;
    %store/vec4 v0x600002ae06c0_0, 0, 32;
    %vpi_call 2 181 "$display", "\012===============================================================" {0 0 0};
    %vpi_call 2 182 "$display", "Test Summary: %0d/%0d tests passed", v0x600002ae0510_0, v0x600002ae06c0_0 {0 0 0};
    %load/vec4 v0x600002ae0510_0;
    %load/vec4 v0x600002ae06c0_0;
    %cmp/e;
    %jmp/0xz  T_1.22, 4;
    %vpi_call 2 184 "$display", "Overall Result: ALL TESTS PASSED \342\234\223" {0 0 0};
    %jmp T_1.23;
T_1.22 ;
    %vpi_call 2 186 "$display", "Overall Result: SOME TESTS PASSED \342\232\240" {0 0 0};
T_1.23 ;
    %vpi_call 2 187 "$display", "===============================================================" {0 0 0};
    %vpi_call 2 189 "$finish" {0 0 0};
    %end;
    .thread T_1;
    .scope S_0x154f06660;
T_2 ;
    %vpi_call 2 194 "$monitor", "Time=%0t: a=%b, b=%b, out_assign=%b, out_alwaysblock=%b", $time, v0x600002ae02d0_0, v0x600002ae0360_0, v0x600002ae0630_0, v0x600002ae05a0_0 {0 0 0};
    %end;
    .thread T_2;
    .scope S_0x154f06660;
T_3 ;
    %vpi_call 2 200 "$dumpfile", "and_gate_tb.vcd" {0 0 0};
    %vpi_call 2 201 "$dumpvars", 32'sb00000000000000000000000000000000, S_0x154f06660 {0 0 0};
    %end;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "tb_always.v";
    "answer_always.v";
