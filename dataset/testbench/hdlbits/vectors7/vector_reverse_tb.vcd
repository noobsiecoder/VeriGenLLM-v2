$date
	Sun Aug 24 21:38:57 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_vector_reverse $end
$var wire 8 ! out [7:0] $end
$var reg 8 " expected_out [7:0] $end
$var reg 8 # in [7:0] $end
$var integer 32 $ i [31:0] $end
$var integer 32 % num_tests_passed [31:0] $end
$var integer 32 & total_tests [31:0] $end
$scope module dut $end
$var wire 8 ' in [7:0] $end
$var wire 8 ( out [7:0] $end
$upscope $end
$scope task check_result $end
$var reg 8 ) exp_out [7:0] $end
$var reg 160 * test_name [160:1] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx *
bx )
b0 (
b0 '
b0 &
b0 %
bx $
b0 #
b0 "
b0 !
$end
#10000
b11111111 !
b11111111 (
b11111111 "
b11111111 #
b11111111 '
b1 %
b1 &
b0 )
b10000010110110001101100001000000111101001100101011100100110111101110011 *
#20000
b1010101 !
b1010101 (
b1010101 "
b10101010 #
b10101010 '
b10 %
b10 &
b11111111 )
b100000101101100011011000010000001101111011011100110010101110011 *
#30000
b10101010 !
b10101010 (
b10101010 "
b1010101 #
b1010101 '
b11 %
b11 &
b1010101 )
b100000101101100011101000110010101110010011011100110000101110100011010010110111001100111001000000011000100110000 *
#40000
b10000000 !
b10000000 (
b10000000 "
b1 #
b1 '
b0 $
b100 %
b100 &
b10101010 )
b100000101101100011101000110010101110010011011100110000101110100011010010110111001100111001000000011000000110001 *
#50000
b1000000 !
b1000000 (
b1000000 "
b10 #
b10 '
b1 $
b101 &
b101 %
#60000
b100000 !
b100000 (
b100000 "
b100 #
b100 '
b10 $
b110 &
b110 %
#70000
b10000 !
b10000 (
b10000 "
b1000 #
b1000 '
b11 $
b111 &
b111 %
#80000
b1000 !
b1000 (
b1000 "
b10000 #
b10000 '
b100 $
b1000 &
b1000 %
#90000
b100 !
b100 (
b100 "
b100000 #
b100000 '
b101 $
b1001 &
b1001 %
#100000
b10 !
b10 (
b10 "
b1000000 #
b1000000 '
b110 $
b1010 &
b1010 %
#110000
b1 !
b1 (
b1 "
b10000000 #
b10000000 '
b111 $
b1011 &
b1011 %
#120000
b1111111 !
b1111111 (
b1111111 "
b11111110 #
b11111110 '
b0 $
b1100 &
b1100 %
#130000
b10111111 !
b10111111 (
b10111111 "
b11111101 #
b11111101 '
b1 $
b1101 &
b1101 %
#140000
b11011111 !
b11011111 (
b11011111 "
b11111011 #
b11111011 '
b10 $
b1110 &
b1110 %
#150000
b11101111 !
b11101111 (
b11101111 "
b11110111 #
b11110111 '
b11 $
b1111 &
b1111 %
#160000
b11110111 !
b11110111 (
b11110111 "
b11101111 #
b11101111 '
b100 $
b10000 &
b10000 %
#170000
b11111011 !
b11111011 (
b11111011 "
b11011111 #
b11011111 '
b101 $
b10001 &
b10001 %
#180000
b11111101 !
b11111101 (
b11111101 "
b10111111 #
b10111111 '
b110 $
b10010 &
b10010 %
#190000
b11111110 !
b11111110 (
b11111110 "
b1111111 #
b1111111 '
b111 $
b10011 &
b10011 %
#200000
b10000001 !
b10000001 (
b10000001 #
b10000001 '
b1000 $
b10100 &
b10100 %
#210000
b11000011 !
b11000011 (
b11000011 #
b11000011 '
#220000
b10111101 !
b10111101 (
b10111101 #
b10111101 '
#230000
b1100110 !
b1100110 (
b1100110 #
b1100110 '
#240000
b11110000 !
b11110000 (
b11110000 "
b1111 #
b1111 '
#250000
b1111 !
b1111 (
b1111 "
b11110000 #
b11110000 '
b10101 %
b10101 &
b11110000 )
b110000011110000011000001000110 *
#260000
b10101010 !
b10101010 (
b10101010 "
b1010101 #
b1010101 '
b10110 %
b10110 &
b1111 )
b110000011110000100011000110000 *
#270000
b1010101 !
b1010101 (
b1010101 "
b10101010 #
b10101010 '
b10111 %
b10111 &
b10101010 )
b110000011110000011010100110101 *
#280000
b10000010 !
b10000010 (
b10000010 "
b1000001 #
b1000001 '
b11000 %
b11000 &
b1010101 )
b110000011110000100000101000001 *
#290000
b1100 !
b1100 (
b1100 "
b110000 #
b110000 '
#300000
b1001011 !
b1001011 (
b11010010 #
b11010010 '
#310000
b11010010 !
b11010010 (
b1001011 #
b1001011 '
#320000
b11001101 !
b11001101 (
b10110011 #
b10110011 '
#330000
