$date
	Sun Aug 24 21:06:05 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_vector_gates $end
$var wire 1 ! out_or_logical $end
$var wire 3 " out_or_bitwise [2:0] $end
$var wire 6 # out_not [5:0] $end
$var reg 3 $ a [2:0] $end
$var reg 3 % b [2:0] $end
$var reg 6 & expected_not [5:0] $end
$var reg 3 ' expected_or_bitwise [2:0] $end
$var reg 1 ( expected_or_logical $end
$var integer 32 ) i [31:0] $end
$var integer 32 * j [31:0] $end
$var integer 32 + num_tests_passed [31:0] $end
$var integer 32 , total_tests [31:0] $end
$scope module dut $end
$var wire 3 - a [2:0] $end
$var wire 3 . b [2:0] $end
$var wire 3 / out_or_bitwise [2:0] $end
$var wire 1 ! out_or_logical $end
$var wire 6 0 out_not [5:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b111111 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
0(
b0 '
b111111 &
b0 %
b0 $
b111111 #
b0 "
0!
$end
#10000
b1 "
b1 /
b111110 #
b111110 0
1!
b110111 &
1(
b1 '
b1 %
b1 .
b1 *
b1 ,
b1 +
#20000
b10 "
b10 /
b111101 #
b111101 0
b101111 &
b10 '
b10 %
b10 .
b10 *
b10 ,
#30000
b11 "
b11 /
b111100 #
b111100 0
b100111 &
b11 '
b11 %
b11 .
b11 *
b11 ,
#40000
b100 "
b100 /
b111011 #
b111011 0
b11111 &
b100 '
b100 %
b100 .
b100 *
b100 ,
#50000
b101 "
b101 /
b111010 #
b111010 0
b10111 &
b101 '
b101 %
b101 .
b101 *
b101 ,
#60000
b110 "
b110 /
b111001 #
b111001 0
b1111 &
b110 '
b110 %
b110 .
b110 *
b110 ,
#70000
b111 "
b111 /
b111000 #
b111000 0
b111 &
b111 '
b111 %
b111 .
b111 *
b111 ,
#80000
b1 "
b1 /
b110111 #
b110111 0
b111110 &
b1 '
b0 %
b0 .
b1 $
b1 -
b1 )
b0 *
b1000 ,
#90000
b110110 #
b110110 0
b110110 &
b1 %
b1 .
b1 *
b1001 ,
#100000
b11 "
b11 /
b110101 #
b110101 0
b101110 &
b11 '
b10 %
b10 .
b10 *
b1010 ,
b10 +
#110000
b110100 #
b110100 0
b100110 &
b11 %
b11 .
b11 *
b1011 ,
#120000
b101 "
b101 /
b110011 #
b110011 0
b11110 &
b101 '
b100 %
b100 .
b100 *
b1100 ,
#130000
b110010 #
b110010 0
b10110 &
b101 %
b101 .
b101 *
b1101 ,
#140000
b111 "
b111 /
b110001 #
b110001 0
b1110 &
b111 '
b110 %
b110 .
b110 *
b1110 ,
#150000
b110000 #
b110000 0
b110 &
b111 %
b111 .
b111 *
b1111 ,
#160000
b10 "
b10 /
b101111 #
b101111 0
b111101 &
b10 '
b0 %
b0 .
b10 $
b10 -
b10 )
b0 *
b10000 ,
#170000
b11 "
b11 /
b101110 #
b101110 0
b110101 &
b11 '
b1 %
b1 .
b1 *
b10001 ,
#180000
b10 "
b10 /
b101101 #
b101101 0
b101101 &
b10 '
b10 %
b10 .
b10 *
b10010 ,
#190000
b11 "
b11 /
b101100 #
b101100 0
b100101 &
b11 '
b11 %
b11 .
b11 *
b10011 ,
b11 +
#200000
b110 "
b110 /
b101011 #
b101011 0
b11101 &
b110 '
b100 %
b100 .
b100 *
b10100 ,
#210000
b111 "
b111 /
b101010 #
b101010 0
b10101 &
b111 '
b101 %
b101 .
b101 *
b10101 ,
#220000
b110 "
b110 /
b101001 #
b101001 0
b1101 &
b110 '
b110 %
b110 .
b110 *
b10110 ,
#230000
b111 "
b111 /
b101000 #
b101000 0
b101 &
b111 '
b111 %
b111 .
b111 *
b10111 ,
#240000
b11 "
b11 /
b100111 #
b100111 0
b111100 &
b11 '
b0 %
b0 .
b11 $
b11 -
b11 )
b0 *
b11000 ,
#250000
b100110 #
b100110 0
b110100 &
b1 %
b1 .
b1 *
b11001 ,
#260000
b100101 #
b100101 0
b101100 &
b10 %
b10 .
b10 *
b11010 ,
#270000
b100100 #
b100100 0
b100100 &
b11 %
b11 .
b11 *
b11011 ,
#280000
b111 "
b111 /
b100011 #
b100011 0
b11100 &
b111 '
b100 %
b100 .
b100 *
b11100 ,
b100 +
#290000
b100010 #
b100010 0
b10100 &
b101 %
b101 .
b101 *
b11101 ,
#300000
b100001 #
b100001 0
b1100 &
b110 %
b110 .
b110 *
b11110 ,
#310000
b100000 #
b100000 0
b100 &
b111 %
b111 .
b111 *
b11111 ,
#320000
b100 "
b100 /
b11111 #
b11111 0
b111011 &
b100 '
b0 %
b0 .
b100 $
b100 -
b100 )
b0 *
b100000 ,
#330000
b101 "
b101 /
b11110 #
b11110 0
b110011 &
b101 '
b1 %
b1 .
b1 *
b100001 ,
#340000
b110 "
b110 /
b11101 #
b11101 0
b101011 &
b110 '
b10 %
b10 .
b10 *
b100010 ,
#350000
b111 "
b111 /
b11100 #
b11100 0
b100011 &
b111 '
b11 %
b11 .
b11 *
b100011 ,
#360000
b100 "
b100 /
b11011 #
b11011 0
b11011 &
b100 '
b100 %
b100 .
b100 *
b100100 ,
#370000
b101 "
b101 /
b11010 #
b11010 0
b10011 &
b101 '
b101 %
b101 .
b101 *
b100101 ,
b101 +
#380000
b110 "
b110 /
b11001 #
b11001 0
b1011 &
b110 '
b110 %
b110 .
b110 *
b100110 ,
#390000
b111 "
b111 /
b11000 #
b11000 0
b11 &
b111 '
b111 %
b111 .
b111 *
b100111 ,
#400000
b101 "
b101 /
b10111 #
b10111 0
b111010 &
b101 '
b0 %
b0 .
b101 $
b101 -
b101 )
b0 *
b101000 ,
#410000
b10110 #
b10110 0
b110010 &
b1 %
b1 .
b1 *
b101001 ,
#420000
b111 "
b111 /
b10101 #
b10101 0
b101010 &
b111 '
b10 %
b10 .
b10 *
b101010 ,
#430000
b10100 #
b10100 0
b100010 &
b11 %
b11 .
b11 *
b101011 ,
#440000
b101 "
b101 /
b10011 #
b10011 0
b11010 &
b101 '
b100 %
b100 .
b100 *
b101100 ,
#450000
b10010 #
b10010 0
b10010 &
b101 %
b101 .
b101 *
b101101 ,
#460000
b111 "
b111 /
b10001 #
b10001 0
b1010 &
b111 '
b110 %
b110 .
b110 *
b101110 ,
b110 +
#470000
b10000 #
b10000 0
b10 &
b111 %
b111 .
b111 *
b101111 ,
#480000
b110 "
b110 /
b1111 #
b1111 0
b111001 &
b110 '
b0 %
b0 .
b110 $
b110 -
b110 )
b0 *
b110000 ,
#490000
b111 "
b111 /
b1110 #
b1110 0
b110001 &
b111 '
b1 %
b1 .
b1 *
b110001 ,
#500000
b110 "
b110 /
b1101 #
b1101 0
b101001 &
b110 '
b10 %
b10 .
b10 *
b110010 ,
#510000
b111 "
b111 /
b1100 #
b1100 0
b100001 &
b111 '
b11 %
b11 .
b11 *
b110011 ,
#520000
b110 "
b110 /
b1011 #
b1011 0
b11001 &
b110 '
b100 %
b100 .
b100 *
b110100 ,
#530000
b111 "
b111 /
b1010 #
b1010 0
b10001 &
b111 '
b101 %
b101 .
b101 *
b110101 ,
#540000
b110 "
b110 /
b1001 #
b1001 0
b1001 &
b110 '
b110 %
b110 .
b110 *
b110110 ,
#550000
b111 "
b111 /
b1000 #
b1000 0
b1 &
b111 '
b111 %
b111 .
b111 *
b110111 ,
b111 +
#560000
b111 #
b111 0
b111000 &
b0 %
b0 .
b111 $
b111 -
b111 )
b0 *
b111000 ,
#570000
b110 #
b110 0
b110000 &
b1 %
b1 .
b1 *
b111001 ,
#580000
b101 #
b101 0
b101000 &
b10 %
b10 .
b10 *
b111010 ,
#590000
b100 #
b100 0
b100000 &
b11 %
b11 .
b11 *
b111011 ,
#600000
b11 #
b11 0
b11000 &
b100 %
b100 .
b100 *
b111100 ,
#610000
b10 #
b10 0
b10000 &
b101 %
b101 .
b101 *
b111101 ,
#620000
b1 #
b1 0
b1000 &
b110 %
b110 .
b110 *
b111110 ,
#630000
b0 #
b0 0
b0 &
b111 %
b111 .
b111 *
b111111 ,
#640000
b0 "
b0 /
b111111 #
b111111 0
0!
b0 %
b0 .
b0 $
b0 -
b1000 )
b1000 *
b1000000 ,
b1000 +
#650000
b101 "
b101 /
b111010 #
b111010 0
1!
b101 %
b101 .
#660000
b111 "
b111 /
b1100 #
b1100 0
b11 %
b11 .
b110 $
b110 -
#670000
b110 "
b110 /
b101011 #
b101011 0
b100 %
b100 .
b10 $
b10 -
#680000
b111 "
b111 /
b0 #
b0 0
b111 %
b111 .
b111 $
b111 -
#690000
b1 "
b1 /
b110111 #
b110111 0
b0 %
b0 .
b1 $
b1 -
#700000
b111 "
b111 /
b111000 #
b111000 0
b111 %
b111 .
b0 $
b0 -
b0 )
#710000
b110001 #
b110001 0
b110 %
b110 .
b1 $
b1 -
b1 )
#720000
b101010 #
b101010 0
b101 %
b101 .
b10 $
b10 -
b10 )
#730000
b100011 #
b100011 0
b100 %
b100 .
b11 $
b11 -
b11 )
#740000
b11100 #
b11100 0
b11 %
b11 .
b100 $
b100 -
b100 )
#750000
b10101 #
b10101 0
b10 %
b10 .
b101 $
b101 -
b101 )
#760000
b1110 #
b1110 0
b1 %
b1 .
b110 $
b110 -
b110 )
#770000
b111 #
b111 0
b0 %
b0 .
b111 $
b111 -
b111 )
#780000
b1 "
b1 /
b110111 #
b110111 0
b1 $
b1 -
b0 )
#790000
b10 "
b10 /
b101111 #
b101111 0
b10 $
b10 -
b1 )
#800000
b100 "
b100 /
b11111 #
b11111 0
b100 $
b100 -
b10 )
#810000
b11 )
